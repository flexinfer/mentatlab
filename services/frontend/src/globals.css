@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

@layer base {
  * {
    /* Use direct CSS var instead of @apply to avoid Tailwind unknown utility error */
    border-color: hsl(var(--border));
  }
  body {
    /* Replace @apply with direct variables to avoid Tailwind utility resolution issues */
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }
}

/* Helper class for Mission Control components that need card background */
.mc-card-bg {
  background-color: hsl(var(--card));
  color: hsl(var(--card-foreground));
}

/* React Flow theme alignment: ensure nodes donâ€™t default to pure white */
.react-flow__node {
  background-color: hsl(var(--card)) !important;
  color: hsl(var(--foreground)) !important;
  border-color: hsl(var(--border)) !important;
  padding: 0 !important;               /* remove default padding that creates a frame */
  box-shadow: none !important;         /* avoid any light drop shadow */
}

/* React Flow built-in typed nodes can carry their own default white bg.
   Normalize them to theme tokens as well. */
.react-flow__node-input,
.react-flow__node-output,
.react-flow__node-default {
  background-color: hsl(var(--card)) !important;
  color: hsl(var(--foreground)) !important;
  border-color: hsl(var(--border)) !important;
  padding: 0 !important;               /* ensure no inner white rim on typed nodes */
  box-shadow: none !important;
}

/* Target nodes we've explicitly marked from our FlowCanvas: make the outer wrapper transparent */
.react-flow__node.mc-node {
  background-color: transparent !important;
  border: none !important;
  padding: 0 !important;
  box-shadow: none !important;
}

/* Handles should use ring color token */
.react-flow__handle {
  background-color: hsl(var(--ring)) !important;
}

/* Minimal selection/hover surfaces aligned with tokens */
.react-flow__node.selectable:focus,
.react-flow__node.selectable:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}