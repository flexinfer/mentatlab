version: '3.8'

services:
  psyche-simulation:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        BUILD_DATE: ${BUILD_DATE:-unknown}
        BUILD_VERSION: ${BUILD_VERSION:-dev}
        VCS_REF: ${VCS_REF:-unknown}
    image: psyche-simulation:${BUILD_VERSION:-latest}
    container_name: psyche-simulation-app
    restart: unless-stopped
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-secure-redis-password-2024}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-secure-redis-password-2024}@redis:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwt-secret-key-psyche-simulation-2024-secure}
      - LLM_API_KEY=${LLM_API_KEY:-90FcWdIeLIT}
      - LLM_API_URL=http://litellm.flexinfer.ai/v1/chat/completions
      - LLM_MODEL=deepseek-r1-abliterated
    ports:
      - "8080:8080"
    volumes:
      - psyche_logs:/app/logs
      - psyche_data:/app/data
      - psyche_exports:/app/exports
      - psyche_cache:/app/.cache
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - psyche-network
    security_opt:
      - no-new-privileges:true
    user: "1000:1000"

  redis:
    image: redis:7.2-alpine
    container_name: psyche-simulation-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-secure-redis-password-2024} --maxmemory 256mb --maxmemory-policy allkeys-lru
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-secure-redis-password-2024}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-secure-redis-password-2024}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - psyche-network
    security_opt:
      - no-new-privileges:true
    user: "999:999"

  # Optional: Nginx reverse proxy for production-like setup
  nginx:
    image: nginx:alpine
    container_name: psyche-simulation-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - psyche-simulation
    networks:
      - psyche-network
    security_opt:
      - no-new-privileges:true
    profiles:
      - production

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: psyche-simulation-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - psyche-network
    profiles:
      - monitoring

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: psyche-simulation-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - psyche-network
    profiles:
      - monitoring

volumes:
  psyche_logs:
    driver: local
  psyche_data:
    driver: local
  psyche_exports:
    driver: local
  psyche_cache:
    driver: local
  redis_data:
    driver: local
  nginx_cache:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  psyche-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16