name: MentatLab Full Pipeline
on: [push, pull_request]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Or appropriate Node.js version for your frontend
          cache: 'npm'
          cache-dependency-path: services/frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm --prefix services/frontend install

      - name: Run frontend unit tests
        run: npm --prefix services/frontend run test

      - name: Run E2E tests
        run: |
          echo "Starting backend services in background for E2E tests..."
          python services/orchestrator/app/main.py &
          python services/gateway/app/main.py &
          
          echo "Waiting for backend services to be ready..."
          timeout=60
          while ! (curl -s http://localhost:8000/healthz > /dev/null && curl -s http://localhost:8001/healthz > /dev/null); do
            sleep 2
            timeout=$((timeout-2))
            if [ $timeout -le 0 ]; then
              echo "Timed out waiting for backend services."
              exit 1
            fi
          done
          
          echo "Backend services are ready. Running E2E tests."
          npm --prefix services/frontend run e2e

  test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Or appropriate Python version for your services

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install PDM
        run: pip install pdm

      - name: Install backend dependencies
        run: |
          pip install -r services/orchestrator/requirements.txt
          pip install -r cli/mentatctl/requirements.txt
          pdm install -p services/gateway

      - name: Run backend unit tests
        run: python -m pytest -c pytest.ini

  deploy-staging:
    needs: [test-frontend, test-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to staging
        run: echo "Staging deployment placeholder"
